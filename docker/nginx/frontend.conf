# Upstream backend API
upstream backend_api {
    server 159.89.108.100:8000;
    keepalive 32;
}

# Main frontend server
server {
    listen 80;
    listen 443 ssl http2;
    server_name moonline.pw www.moonline.pw 139.59.158.109;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/moonline.pw.crt;
    ssl_certificate_key /etc/nginx/ssl/moonline.pw.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }

    # Proxy API requests to backend server
    location /api/ {
        proxy_pass http://backend_api/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://moonline.pw" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check
    location /health {
        access_log off;
        return 200 'Frontend OK';
        add_header Content-Type text/plain;
    }

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff always;
    }
}

# Subdomain support (*.moonline.pw)
server {
    listen 80;
    listen 443 ssl http2;
    server_name *.moonline.pw;

    # Wildcard SSL certificate
    ssl_certificate /etc/nginx/ssl/wildcard.moonline.pw.crt;
    ssl_certificate_key /etc/nginx/ssl/wildcard.moonline.pw.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # Extract subdomain
    set $subdomain "";
    if ($host ~* "^(.+)\.moonline\.pw$") {
        set $subdomain $1;
    }

    # Frontend for subdomains
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Project-specific headers
        add_header X-Project-Subdomain $subdomain always;
        add_header X-Project-Type "project" always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
    }

    # API proxy with subdomain context
    location /api/ {
        proxy_pass http://backend_api/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Project-Domain $host;
        proxy_set_header X-Project-Subdomain $subdomain;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Redirect admin access to main domain
    location /admin {
        return 301 https://moonline.pw$request_uri;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name moonline.pw www.moonline.pw *.moonline.pw 139.59.158.109;
    return 301 https://$server_name$request_uri;
}
