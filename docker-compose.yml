version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: leadvertex
      POSTGRES_USER: leadvertex
      POSTGRES_PASSWORD: leadvertex123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leadvertex"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://leadvertex:leadvertex123@postgres/leadvertex
      - DATABASE_URL_SYNC=postgresql://leadvertex:leadvertex123@postgres/leadvertex
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DEBUG=true
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: ./backend
    command: celery -A app.celery_app.celery worker --loglevel=info --queues=default,telephony,notifications,automation,analytics
    environment:
      - DATABASE_URL=postgresql+asyncpg://leadvertex:leadvertex123@postgres/leadvertex
      - DATABASE_URL_SYNC=postgresql://leadvertex:leadvertex123@postgres/leadvertex
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: ./backend
    command: celery -A app.celery_app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://leadvertex:leadvertex123@postgres/leadvertex
      - DATABASE_URL_SYNC=postgresql://leadvertex:leadvertex123@postgres/leadvertex
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  # Flower (Celery monitoring)
  flower:
    build: ./backend
    command: celery -A app.celery_app.celery flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_uploads: