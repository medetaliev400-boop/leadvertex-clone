#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 157.230.27.200
# –ê–≤—Ç–æ—Ä: MiniMax Agent

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 157.230.27.200"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.backend.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: docker-compose.backend.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /opt/leadvertex-clone"
    exit 1
fi

echo "üìã –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << 'EOF'
# Database Configuration
DATABASE_URL=postgresql+asyncpg://leadvertex:Vf9pXy7Kz@3mQw2h@postgres/leadvertex
DATABASE_URL_SYNC=postgresql://leadvertex:Vf9pXy7Kz@3mQw2h@postgres/leadvertex
POSTGRES_PASSWORD=Vf9pXy7Kz@3mQw2h

# Redis Configuration  
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/2

# Security Configuration
SECRET_KEY=9bF7kP0rLmQ8dT6zXaC4nE1jGyHvW5sK
ACCESS_TOKEN_EXPIRE_MINUTES=10080

# Application Settings
DEBUG=false
TESTING=false
PROJECT_NAME=LeadVertex Clone
PROJECT_VERSION=1.0.0

# File Upload Settings
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760

# Beget API Configuration
BEGET_LOGIN=aex020w5
BEGET_PASSWORD=46B*bRc4JATXztr
MAIN_DOMAIN=moonline.pw

# Server Configuration
FRONTEND_SERVER_IP=164.90.219.122
BACKEND_SERVER_IP=157.230.27.200
FRONTEND_DOMAIN=https://moonline.pw,https://*.moonline.pw
BACKEND_URL=https://api.moonline.pw

# CORS Settings
CORS_ORIGINS=["https://moonline.pw","https://www.moonline.pw","https://*.moonline.pw","http://164.90.219.122","https://164.90.219.122"]

# Flower Monitoring
FLOWER_PASSWORD=admin123
EOF

echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

echo "üîê –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
cd docker/ssl

# –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ)
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout api.moonline.pw.key \
    -out api.moonline.pw.crt \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=api.moonline.pw" 2>/dev/null

openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout moonline.pw.key \
    -out moonline.pw.crt \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=moonline.pw" 2>/dev/null

openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout wildcard.moonline.pw.key \
    -out wildcard.moonline.pw.crt \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=*.moonline.pw" 2>/dev/null

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
chmod 644 *.crt
chmod 600 *.key

echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd ../..

echo "üê≥ –®–∞–≥ 3: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.backend.yml down || true

echo "üì¶ –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Redis..."
docker-compose -f docker-compose.backend.yml up -d postgres redis

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PostgreSQL (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

echo "üì¶ –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.backend.yml up -d backend celery-worker celery-beat

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend (20 —Å–µ–∫—É–Ω–¥)..."
sleep 20

echo "üì¶ –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ Nginx..."
docker-compose -f docker-compose.backend.yml up -d nginx-api

echo "üìä –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.backend.yml ps

echo ""
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx
if curl -k https://localhost/health > /dev/null 2>&1; then
    echo "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Nginx –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Backend –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "docker-compose -f docker-compose.backend.yml ps      # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "docker-compose -f docker-compose.backend.yml logs -f # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "curl http://localhost:8000/health                    # –¢–µ—Å—Ç API"
echo "curl -k https://localhost/health                     # –¢–µ—Å—Ç Nginx"
echo ""
echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞:"
echo "- http://157.230.27.200:8000/docs (Swagger)"
echo "- http://157.230.27.200:8000/health (Health check)"